<?php

/**
 * SiteTransUnitTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SiteTransUnitTable extends Doctrine_Table
{

    private static $all_translation = array();


    public static function getTranslated($sources, $catalogues = null, $site_ids = array(-1))
    {
        //var_dump("GetTranslated");
        if(!is_null($catalogues) && is_array($catalogues))
        {
            foreach($catalogues as $c)
            {
                if(!is_null($site_ids) && is_array($site_ids))
                {
                    foreach($site_ids as $s)
                    {
                        foreach(array_keys($sources) as $ss)
                        {
                            if(isset(self::$all_translation[$c][$s][$ss]))
                            {
                                //var_dump("return found");
                                return self::$all_translation[$c][$s][$ss];
                            }
                        }
                    }
                }
                else if(!is_null($site_ids) && !is_array($site_ids))
                {
                    foreach(array_keys($sources) as $ss)
                    {
                        if(isset(self::$all_translation[$c][$site_ids][$ss]))
                        {
                            //var_dump("return found");
                            return self::$all_translation[$c][$site_ids][$ss];
                        }
                    }
                }
            }
        }
        else if(!is_null($catalogues) && !is_array($catalogues))
        {
            if(!is_null($site_ids) && is_array($site_ids))
            {
                foreach($site_ids as $s)
                {
                    foreach(array_keys($sources) as $ss)
                    {
                        if(isset(self::$all_translation[$catalogues][$s][$ss]))
                        {
                            //var_dump("return found");
                            return self::$all_translation[$catalogues][$s][$ss];
                        }
                    }
                }
            }
            else if(!is_null($site_ids) && !is_array($site_ids))
            {
                foreach(array_keys($sources) as $ss)
                {
                    if(isset(self::$all_translation[$catalogues][$site_ids][$ss]))
                    {
                        //var_dump("return found");
                        return self::$all_translation[$catalogues][$site_ids][$ss];
                    }
                }
            }
        }
        //var_dump("return default");
        //addig marad míg vége nincs az optimalizálós körnek
        return array(array("target" => ""));

        $sources[-1] = -1;
        $query = self::getInstance()
            ->createQuery('tu')
            ->leftJoin('tu.Catalogue cat')
            ->select('tu.site_id, cat.name, tu.msg_id, tu.source, tu.target')
            ->andWhereIn('tu.source', array_keys($sources))
            ->andWhereIn('tu.site_id', $site_ids);
        //Project::prePrint($sources);
        //Project::prePrint($site_ids);
        //Project::prePrint($query->fetchArray());

        if($catalogues)
        {
            $query->andWhereIn('SUBSTRING(cat.name, 1, CHAR_LENGTH(cat.name)-3)', $catalogues);
        }

        #echo $query->getSqlQuery();

        $entries = $query
            ->fetchArray();

        return $entries;
    }


    /**
     * Returns an instance of this class.
     *
     * @return SiteTransUnitTable The table instance
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('SiteTransUnit');
    }


}