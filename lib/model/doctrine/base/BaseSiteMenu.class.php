<?php

/**
 * BaseSiteMenu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $site_id
 * @property integer $parent_id
 * @property string $type
 * @property string $text
 * @property clob $icon
 * @property string $url
 * @property string $url_predefined
 * @property string $html_title
 * @property boolean $is_highlighted
 * @property boolean $is_target_blank
 * @property boolean $is_active
 * @property SiteMenu $ParentMenu
 * @property Site $Site
 * @property Doctrine_Collection $ChildMenus
 * 
 * @method integer             getSiteId()          Returns the current record's "site_id" value
 * @method integer             getParentId()        Returns the current record's "parent_id" value
 * @method string              getType()            Returns the current record's "type" value
 * @method string              getText()            Returns the current record's "text" value
 * @method clob                getIcon()            Returns the current record's "icon" value
 * @method string              getUrl()             Returns the current record's "url" value
 * @method string              getUrlPredefined()   Returns the current record's "url_predefined" value
 * @method string              getHtmlTitle()       Returns the current record's "html_title" value
 * @method boolean             getIsHighlighted()   Returns the current record's "is_highlighted" value
 * @method boolean             getIsTargetBlank()   Returns the current record's "is_target_blank" value
 * @method boolean             getIsActive()        Returns the current record's "is_active" value
 * @method SiteMenu            getParentMenu()      Returns the current record's "ParentMenu" value
 * @method Site                getSite()            Returns the current record's "Site" value
 * @method Doctrine_Collection getChildMenus()      Returns the current record's "ChildMenus" collection
 * @method SiteMenu            setSiteId()          Sets the current record's "site_id" value
 * @method SiteMenu            setParentId()        Sets the current record's "parent_id" value
 * @method SiteMenu            setType()            Sets the current record's "type" value
 * @method SiteMenu            setText()            Sets the current record's "text" value
 * @method SiteMenu            setIcon()            Sets the current record's "icon" value
 * @method SiteMenu            setUrl()             Sets the current record's "url" value
 * @method SiteMenu            setUrlPredefined()   Sets the current record's "url_predefined" value
 * @method SiteMenu            setHtmlTitle()       Sets the current record's "html_title" value
 * @method SiteMenu            setIsHighlighted()   Sets the current record's "is_highlighted" value
 * @method SiteMenu            setIsTargetBlank()   Sets the current record's "is_target_blank" value
 * @method SiteMenu            setIsActive()        Sets the current record's "is_active" value
 * @method SiteMenu            setParentMenu()      Sets the current record's "ParentMenu" value
 * @method SiteMenu            setSite()            Sets the current record's "Site" value
 * @method SiteMenu            setChildMenus()      Sets the current record's "ChildMenus" collection
 * 
 * @package    s14cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSiteMenu extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('site_menu');
        $this->hasColumn('site_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'string', 63, array(
             'type' => 'string',
             'length' => 63,
             ));
        $this->hasColumn('text', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('icon', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('url', 'string', 1023, array(
             'type' => 'string',
             'length' => 1023,
             ));
        $this->hasColumn('url_predefined', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('html_title', 'string', 1023, array(
             'type' => 'string',
             'length' => 1023,
             ));
        $this->hasColumn('is_highlighted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_target_blank', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SiteMenu as ParentMenu', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Site', array(
             'local' => 'site_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('SiteMenu as ChildMenus', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable(array(
             'uniqueBy' => 
             array(
              0 => 'parent_id',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
    }
}