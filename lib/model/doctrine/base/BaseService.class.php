<?php

/**
 * BaseService
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $site_id
 * @property string $title_general
 * @property string $title
 * @property clob $description
 * @property clob $content
 * @property boolean $is_active
 * @property string $html_title
 * @property string $meta_title
 * @property clob $meta_description
 * @property clob $meta_keywords
 * @property string $meta_robots
 * @property Site $Site
 * 
 * @method integer getSiteId()           Returns the current record's "site_id" value
 * @method string  getTitleGeneral()     Returns the current record's "title_general" value
 * @method string  getTitle()            Returns the current record's "title" value
 * @method clob    getDescription()      Returns the current record's "description" value
 * @method clob    getContent()          Returns the current record's "content" value
 * @method boolean getIsActive()         Returns the current record's "is_active" value
 * @method string  getHtmlTitle()        Returns the current record's "html_title" value
 * @method string  getMetaTitle()        Returns the current record's "meta_title" value
 * @method clob    getMetaDescription()  Returns the current record's "meta_description" value
 * @method clob    getMetaKeywords()     Returns the current record's "meta_keywords" value
 * @method string  getMetaRobots()       Returns the current record's "meta_robots" value
 * @method Site    getSite()             Returns the current record's "Site" value
 * @method Service setSiteId()           Sets the current record's "site_id" value
 * @method Service setTitleGeneral()     Sets the current record's "title_general" value
 * @method Service setTitle()            Sets the current record's "title" value
 * @method Service setDescription()      Sets the current record's "description" value
 * @method Service setContent()          Sets the current record's "content" value
 * @method Service setIsActive()         Sets the current record's "is_active" value
 * @method Service setHtmlTitle()        Sets the current record's "html_title" value
 * @method Service setMetaTitle()        Sets the current record's "meta_title" value
 * @method Service setMetaDescription()  Sets the current record's "meta_description" value
 * @method Service setMetaKeywords()     Sets the current record's "meta_keywords" value
 * @method Service setMetaRobots()       Sets the current record's "meta_robots" value
 * @method Service setSite()             Sets the current record's "Site" value
 * 
 * @package    s14cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseService extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service');
        $this->hasColumn('site_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title_general', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('html_title', 'string', 1023, array(
             'type' => 'string',
             'length' => 1023,
             ));
        $this->hasColumn('meta_title', 'string', 1023, array(
             'type' => 'string',
             'length' => 1023,
             ));
        $this->hasColumn('meta_description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('meta_keywords', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('meta_robots', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Site', array(
             'local' => 'site_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => false,
             'fields' => 
             array(
              0 => 'title_general',
             ),
             'canUpdate' => true,
             'builder' => 
             array(
              0 => 'Project',
              1 => 'slugify',
             ),
             ));
        $sortable0 = new Doctrine_Template_Sortable(array(
             'uniqueBy' => 
             array(
              0 => 'site_id',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($sortable0);
    }
}